{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\septe\\\\Desktop\\\\41_React_router\\\\41.3_react-jokes-classes\\\\src\\\\JokeList.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\nclass JokeList extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"JokeList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"JokeList-getmore\",\n      onClick: generateNewJokes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 5\n      }\n    }, \"Get New Jokes\"), sortedJokes.map(j => /*#__PURE__*/React.createElement(Joke, {\n      text: j.joke,\n      key: j.id,\n      id: j.id,\n      votes: j.votes,\n      vote: vote,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    })));\n  }\n\n} // function JokeList({ numJokesToGet = 10 }) {\n//   const [jokes, setJokes] = useState([]);\n//   /* get jokes if there are no jokes */\n//   useEffect(function() {\n//     async function getJokes() {\n//       let j = [...jokes];\n//       let seenJokes = new Set();\n//       try {\n//         while (j.length < numJokesToGet) {\n//           let res = await axios.get(\"https://icanhazdadjoke.com\", {\n//             headers: { Accept: \"application/json\" }\n//           });\n//           let { status, ...jokeObj } = res.data;\n//           if (!seenJokes.has(jokeObj.id)) {\n//             seenJokes.add(jokeObj.id);\n//             j.push({ ...jokeObj, votes: 0 });\n//           } else {\n//             console.error(\"duplicate found!\");\n//           }\n//         }\n//         setJokes(j);\n//       } catch (e) {\n//         console.log(e);\n//       }\n//     }\n//     if (jokes.length === 0) getJokes();\n//   }, [jokes, numJokesToGet]);\n//   /* empty joke list and then call getJokes */\n//   function generateNewJokes() {\n//     setJokes([]);\n//   }\n//   /* change vote for this id by delta (+1 or -1) */\n//   function vote(id, delta) {\n//     setJokes(allJokes =>\n//       allJokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n//     );\n//   }\n//   /* render: either loading spinner or list of sorted jokes. */\n//   if (jokes.length) {\n//     let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n//     return (\n//       <div className=\"JokeList\">\n//         <button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n//           Get New Jokes\n//         </button>\n//         {sortedJokes.map(j => (\n//           <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={vote} />\n//         ))}\n//       </div>\n//     );\n//   }\n//   return null;\n// }\n// function JokeList({ numJokesToGet = 10 }) {\n//   const [jokes, setJokes] = useState([]);\n//   /* get jokes if there are no jokes */\n//   useEffect(function() {\n//     async function getJokes() {\n//       let j = [...jokes];\n//       let seenJokes = new Set();\n//       try {\n//         while (j.length < numJokesToGet) {\n//           let res = await axios.get(\"https://icanhazdadjoke.com\", {\n//             headers: { Accept: \"application/json\" }\n//           });\n//           let { status, ...jokeObj } = res.data;\n//           if (!seenJokes.has(jokeObj.id)) {\n//             seenJokes.add(jokeObj.id);\n//             j.push({ ...jokeObj, votes: 0 });\n//           } else {\n//             console.error(\"duplicate found!\");\n//           }\n//         }\n//         setJokes(j);\n//       } catch (e) {\n//         console.log(e);\n//       }\n//     }\n//     if (jokes.length === 0) getJokes();\n//   }, [jokes, numJokesToGet]);\n//   /* empty joke list and then call getJokes */\n//   function generateNewJokes() {\n//     setJokes([]);\n//   }\n//   /* change vote for this id by delta (+1 or -1) */\n//   function vote(id, delta) {\n//     setJokes(allJokes =>\n//       allJokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n//     );\n//   }\n//   /* render: either loading spinner or list of sorted jokes. */\n//   if (jokes.length) {\n//     let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n//     return (\n//       <div className=\"JokeList\">\n//         <button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n//           Get New Jokes\n//         </button>\n//         {sortedJokes.map(j => (\n//           <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={vote} />\n//         ))}\n//       </div>\n//     );\n//   }\n//   return null;\n// }\n\n\nexport default JokeList;","map":{"version":3,"sources":["C:/Users/septe/Desktop/41_React_router/41.3_react-jokes-classes/src/JokeList.js"],"names":["React","useState","useEffect","axios","Joke","JokeList","Component","render","generateNewJokes","sortedJokes","map","j","joke","id","votes","vote"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAN,SAAuBL,KAAK,CAACM,SAA7B,CAAsC;AACpCC,EAAAA,MAAM,GAAG;AACP,wBAAQ;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACR;AAAQ,MAAA,SAAS,EAAC,kBAAlB;AAAqC,MAAA,OAAO,EAAEC,gBAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADQ,EAKPC,WAAW,CAACC,GAAZ,CAAgBC,CAAC,iBAChB,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEA,CAAC,CAACC,IAAd;AAAoB,MAAA,GAAG,EAAED,CAAC,CAACE,EAA3B;AAA+B,MAAA,EAAE,EAAEF,CAAC,CAACE,EAArC;AAAyC,MAAA,KAAK,EAAEF,CAAC,CAACG,KAAlD;AAAyD,MAAA,IAAI,EAAEC,IAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,CALO,CAAR;AASD;;AAXmC,C,CAateAAeV,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\nclass JokeList extends React.Component{\n  render() {\n    return  <div className=\"JokeList\">\n    <button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n      Get New Jokes\n    </button>\n\n    {sortedJokes.map(j => (\n      <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={vote} />\n    ))}\n  </div>\n  }\n}\n// function JokeList({ numJokesToGet = 10 }) {\n//   const [jokes, setJokes] = useState([]);\n\n//   /* get jokes if there are no jokes */\n\n//   useEffect(function() {\n//     async function getJokes() {\n//       let j = [...jokes];\n//       let seenJokes = new Set();\n//       try {\n//         while (j.length < numJokesToGet) {\n//           let res = await axios.get(\"https://icanhazdadjoke.com\", {\n//             headers: { Accept: \"application/json\" }\n//           });\n//           let { status, ...jokeObj } = res.data;\n  \n//           if (!seenJokes.has(jokeObj.id)) {\n//             seenJokes.add(jokeObj.id);\n//             j.push({ ...jokeObj, votes: 0 });\n//           } else {\n//             console.error(\"duplicate found!\");\n//           }\n//         }\n//         setJokes(j);\n//       } catch (e) {\n//         console.log(e);\n//       }\n//     }\n\n//     if (jokes.length === 0) getJokes();\n//   }, [jokes, numJokesToGet]);\n\n//   /* empty joke list and then call getJokes */\n\n//   function generateNewJokes() {\n//     setJokes([]);\n//   }\n\n//   /* change vote for this id by delta (+1 or -1) */\n\n//   function vote(id, delta) {\n//     setJokes(allJokes =>\n//       allJokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n//     );\n//   }\n\n//   /* render: either loading spinner or list of sorted jokes. */\n\n//   if (jokes.length) {\n//     let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n  \n//     return (\n//       <div className=\"JokeList\">\n//         <button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n//           Get New Jokes\n//         </button>\n  \n//         {sortedJokes.map(j => (\n//           <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={vote} />\n//         ))}\n//       </div>\n//     );\n//   }\n\n//   return null;\n\n// }\n\n// function JokeList({ numJokesToGet = 10 }) {\n//   const [jokes, setJokes] = useState([]);\n\n//   /* get jokes if there are no jokes */\n\n//   useEffect(function() {\n//     async function getJokes() {\n//       let j = [...jokes];\n//       let seenJokes = new Set();\n//       try {\n//         while (j.length < numJokesToGet) {\n//           let res = await axios.get(\"https://icanhazdadjoke.com\", {\n//             headers: { Accept: \"application/json\" }\n//           });\n//           let { status, ...jokeObj } = res.data;\n  \n//           if (!seenJokes.has(jokeObj.id)) {\n//             seenJokes.add(jokeObj.id);\n//             j.push({ ...jokeObj, votes: 0 });\n//           } else {\n//             console.error(\"duplicate found!\");\n//           }\n//         }\n//         setJokes(j);\n//       } catch (e) {\n//         console.log(e);\n//       }\n//     }\n\n//     if (jokes.length === 0) getJokes();\n//   }, [jokes, numJokesToGet]);\n\n//   /* empty joke list and then call getJokes */\n\n//   function generateNewJokes() {\n//     setJokes([]);\n//   }\n\n//   /* change vote for this id by delta (+1 or -1) */\n\n//   function vote(id, delta) {\n//     setJokes(allJokes =>\n//       allJokes.map(j => (j.id === id ? { ...j, votes: j.votes + delta } : j))\n//     );\n//   }\n\n//   /* render: either loading spinner or list of sorted jokes. */\n\n//   if (jokes.length) {\n//     let sortedJokes = [...jokes].sort((a, b) => b.votes - a.votes);\n  \n//     return (\n//       <div className=\"JokeList\">\n//         <button className=\"JokeList-getmore\" onClick={generateNewJokes}>\n//           Get New Jokes\n//         </button>\n  \n//         {sortedJokes.map(j => (\n//           <Joke text={j.joke} key={j.id} id={j.id} votes={j.votes} vote={vote} />\n//         ))}\n//       </div>\n//     );\n//   }\n\n//   return null;\n\n// }\n\nexport default JokeList;\n"]},"metadata":{},"sourceType":"module"}